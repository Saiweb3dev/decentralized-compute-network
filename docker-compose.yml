version: '3'
services:
  # Redis for pub/sub and coordination
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  # Worker node instances
  worker1:
    build:
      context: ./backend/worker-node
      dockerfile: Dockerfile
    environment:
      - NODE_ID=worker-1
      - NODE_ADDRESS=0.0.0.0:5001
      - REDIS_ADDRESS=redis:6379
      - MAX_TASKS=10
      - LOG_LEVEL=info
    ports:
      - "5001:5001"
    depends_on:
      redis:
        condition: service_healthy

  worker2:
    build:
      context: ./backend/worker-node
      dockerfile: Dockerfile
    environment:
      - NODE_ID=worker-2
      - NODE_ADDRESS=0.0.0.0:5001
      - REDIS_ADDRESS=redis:6379
      - MAX_TASKS=10
      - LOG_LEVEL=info
    ports:
      - "5002:5001"
    depends_on:
      redis:
        condition: service_healthy    
  task-manager:
    build: 
      context: ./backend/task-manager
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=docker
      - MONGO_URI=mongodb://mongodb:27017/taskDB
      - REDIS_ADDRESS=redis:6379
    depends_on:
      - mongodb
      - redis
  
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

volumes:
  mongodb_data:
  redis-data: